/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  LibraryHeader as LibraryHeader
} from './components/library-header/library-header';

declare global {
  interface HTMLLibraryHeaderElement extends LibraryHeader, HTMLElement {
  }
  var HTMLLibraryHeaderElement: {
    prototype: HTMLLibraryHeaderElement;
    new (): HTMLLibraryHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "library-header": HTMLLibraryHeaderElement;
  }
  interface ElementTagNameMap {
    "library-header": HTMLLibraryHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "library-header": JSXElements.LibraryHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface LibraryHeaderAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  LibraryInfo as LibraryInfo
} from './components/library-info/library-info';

declare global {
  interface HTMLLibraryInfoElement extends LibraryInfo, HTMLElement {
  }
  var HTMLLibraryInfoElement: {
    prototype: HTMLLibraryInfoElement;
    new (): HTMLLibraryInfoElement;
  };
  interface HTMLElementTagNameMap {
    "library-info": HTMLLibraryInfoElement;
  }
  interface ElementTagNameMap {
    "library-info": HTMLLibraryInfoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "library-info": JSXElements.LibraryInfoAttributes;
    }
  }
  namespace JSXElements {
    export interface LibraryInfoAttributes extends HTMLAttributes {
      apiKey?: string;
      calendarId?: string;
      hoursLink?: string;
    }
  }
}


import {
  LibraryInfo as LibrarySearch
} from './components/library-search/library-search';

declare global {
  interface HTMLLibrarySearchElement extends LibrarySearch, HTMLElement {
  }
  var HTMLLibrarySearchElement: {
    prototype: HTMLLibrarySearchElement;
    new (): HTMLLibrarySearchElement;
  };
  interface HTMLElementTagNameMap {
    "library-search": HTMLLibrarySearchElement;
  }
  interface ElementTagNameMap {
    "library-search": HTMLLibrarySearchElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "library-search": JSXElements.LibrarySearchAttributes;
    }
  }
  namespace JSXElements {
    export interface LibrarySearchAttributes extends HTMLAttributes {
      cxToken?: string;
      placeholder?: string;
      searchLink?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
